---
title: "Trabalho de Conclusão"
subtitle: "Cuso de R para Ciência de Dados 2"
author: "Leticia Lopes"
lang: pt
date: "`r format(Sys.Date())`" 
date-format: short
execute:
  echo: true
  warning: false
  message: false
format:
  html:
    toc: true
    code-tools: true
    theme: journal
title-block-banner: "#8B2635"
editor: visual
---

## Contexto

Esse relatório se trata do Trabalho de Conclusão do curso de R para Ciência de Dados II, da <a href="https://curso-r.com/" target="_blank">Curso-R</a> (turma 03/2023).

Para responder às perguntas propostas, foram utilizadas as bases de filmes do IMDB, acessadas com o código a seguir.

```{r}

imdb <- basesCursoR::pegar_base("imdb_completa")
imdb_pessoas <- basesCursoR::pegar_base("imdb_pessoas")
imdb_avaliacoes <- basesCursoR::pegar_base("imdb_avaliacoes")

```

## Perguntas

### 1. Qual o mês do ano com o maior número de filmes? E o dia do ano?

```{r calc_mes}

library(tidyverse)

imdb_2 <- imdb |> 
  filter(str_detect(imdb$data_lancamento, "[0-9]{4}-[0-9]{2}-[0-9]{2}")) |> 
  mutate(data_lancamento = ymd(data_lancamento)) |> 
  mutate(mes_abr = month(data_lancamento, label = TRUE, locale = "pt_BR"),
         mes_comp = month(data_lancamento, label = TRUE, locale = "pt_BR", abbr = F),
         dia = day(data_lancamento))

maior_mes <- imdb_2 |> 
  group_by(ano) |> 
  count(mes_comp) |> 
  group_by(mes_comp) |> 
  summarise(media = mean(n, na.rm = T)) |> 
  filter(media == max(media)) |> 
  pull(mes_comp)


maior_dia <- imdb_2 |> 
  group_by(ano) |>
  count(dia) |> 
  group_by(dia) |> 
  summarise(media = mean(n, na.rm = T)) |> 
  filter(media == max(media)) |> 
  pull(dia)


```

Considerando os anos de `r min(imdb_2$ano)` a `r max(imdb_2$ano)`, o mês do ano com o maior número de filmes, em média, foi `r maior_mes`. Já o dia com o maior número de filmes, em média, foi `r maior_dia`, como destacado nos gráficos abaixo.

::: panel-tabset
## Filmes por mês

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 4
#| fig-align: "center"

imdb_2 |> 
  count(mes_abr) |> 
  mutate(maior_mes = if_else(n == max(n), "sim", "não")) |> 
  ggplot() +
  geom_col(aes(x = mes_abr, y = n, fill = maior_mes)) +
  scale_fill_manual(values = c("grey", "#8B2635")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
  labs(x = element_blank(),
       y = "Média de filmes por ano") +
  theme_classic() + 
  theme(legend.position = "none")

```

## Filmes por dia

```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 4
#| fig-align: "center"


imdb_2 |> 
  count(dia) |> 
  mutate(maior_dia = if_else(n == max(n), "sim", "não")) |> 
  ggplot() +
  geom_col(aes(x = as.factor(dia), y = n, fill = maior_dia)) +
  scale_fill_manual(values = c("grey", "#8B2635")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
                     n.breaks = 7) +
  labs(x = element_blank(),
       y = "Média de filmes por ano") +
  theme_classic() + 
  theme(legend.position = "none")

```
:::

### 2. Qual o top 5 países com mais filmes na base?

Na tabela abaixo, estão os 5 países com mais filmes.

```{r}
#| echo: true
#| fig-width: 6


imdb |> 
  separate_longer_delim(pais, delim = ",") |> 
  count(pais) |> 
  slice_max(order_by = n, n = 5) |> 
  mutate(pais = fct_recode(as_factor(pais), 
                           "EUA" = "USA",
                           "Índia" = "India",
                           "Reino Unido" = "UK",
                           "França" = "France",
                           "Itália" = "Italy")) |> 
  rename(`País` = pais,
         `Nº de filmes` = n) |> 
  knitr::kable()

```


### 3. Liste todas as moedas que aparecem nas colunas \`orcamento\` e \`receita\` da base \`imdb_completa\`.

Na tabela abaixo, estão listadas todas as moedas.

```{r}

identifica_moedas <- function(col) {
  imdb |> 
  filter(!is.na({{ col }})) |> 
  distinct({{ col }}) |>
  pull({{ col }}) |> 
  str_remove_all(" [0-9]+") |> 
  unique()
}

c(identifica_moedas(orcamento), identifica_moedas(receita)) |> 
  unique() |> 
  as_tibble() |> 
  rename(Moeda = value) |> 
  DT::datatable()



```

### 4. Considerando apenas orçamentos e receitas em dólar (\$), qual o gênero com maior lucro? E com maior nota média?

```{r}

imdb_lucro <- imdb |> 
  filter(str_detect(orcamento, "\\$") & str_detect(receita, "\\$")) |> 
  mutate(orcamento_num = str_remove(orcamento, "\\$ ") |> as.double(),
         receita_num = str_remove(receita, "\\$ ") |> as.double(),
         lucro = receita_num - orcamento_num)
 

imdb_genero <- imdb_lucro |>
  separate_longer_delim(genero, delim = ",") |>  
  mutate(genero = str_squish(genero)) |> 
  mutate(genero = fct_recode(as_factor(genero), 
                           "Ação" = "Action",
                           "Aventura" = "Adventure",
                           "Animação" = "Animation",
                           "Biografia" = "Biography",
                           "Comédia" = "Comedy",
                           "Família" = "Family",
                           "Fantasia" = "Fantasy",
                           "Suspense" =  "Thriller",
                           "Musical" = "Music",
                           "Faroeste" = "Western",
                           "Guerra" = "War",
                           "Histórico" = "History",
                           "Documentário" = "Documentary"
                           )) |> 
  group_by(genero) |> 
  summarise(lucro_total = sum(lucro, na.rm = T),
            nota_media = mean(nota_imdb, na.rm = T),
            n = n())

maior_lucro <- imdb_genero |> 
  filter(lucro_total == max(lucro_total)) |> 
  pull(genero)

maior_nota <- imdb_genero |> 
  filter(nota_media == max(nota_media)) |> 
   pull(genero)


```

Considerando os filmes lançados entre `r min(imdb$ano, na.rm = T)` a `r max(imdb$ano, na.rm = T)`, o gênero com maior lucro total foi "`r maior_lucro`" e aquele com maior nota média foi "`r maior_nota`". Os gráficos abaixo apresentam o lucro e a nota para os top dez gêneros.

::: panel-tabset
## Lucro

```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 4
#| fig-align: "center"

imdb_genero |> 
  slice_max(order_by = lucro_total, n = 10) |> 
  mutate(maior_lucro = if_else(lucro_total == max(lucro_total), "sim", "não"),
         genero = fct_reorder(genero, desc(lucro_total))) |> 
  ggplot() +
  geom_col(aes(x = genero, y = lucro_total, fill = maior_lucro)) +
  scale_fill_manual(values = c("grey", "#8B2635")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
                     n.breaks = 8,
                     labels = scales::number_format(big.mark = ".",
                                                    decimal.mark = ",",
                                                    scale = 1e-6,
                                                    suffix = " M")) +
  labs(x = element_blank(),
       y = "Lucro (US$)") +
  theme_classic() + 
  theme(legend.position = "none")

```

## Nota média

```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 4
#| fig-align: "center"

imdb_genero |> 
  slice_max(order_by = nota_media, n = 10) |> 
  mutate(maior_nota = if_else(nota_media == max(nota_media), "sim", "não"),
         genero = fct_reorder(genero, desc(nota_media))) |> 
  ggplot() +
  geom_col(aes(x = genero, y = nota_media, fill = maior_nota)) +
  scale_fill_manual(values = c("grey", "#8B2635")) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
                     n.breaks = 8) +
  labs(x = element_blank(),
       y = "Nota média") +
  theme_classic() + 
  theme(legend.position = "none")

```
:::

### 5. Dentre os filmes na base \`imdb_completa\`, escolha o seu favorito. Então faça os itens a seguir:

a)  Quem dirigiu o filme? Faça uma ficha dessa pessoa: idade (hoje em dia ou data de falecimento), onde nasceu, quantos filmes já dirigiu, qual o lucro médio dos filmes que dirigiu (considerando apenas valores em dólar) e outras informações que achar interessante (base \`imdb_pessoas\`).

```{r}

diretor <- imdb |> 
  filter(titulo == "Hunger Games") |> 
  pull(direcao)

idade <- imdb_pessoas |> 
  filter(nome == diretor) |> 
  mutate(data_nascimento = ymd(data_nascimento),
         idade = Sys.Date() - data_nascimento) |> 
  mutate(idade = round(as.period(idade) / years(1))) |> 
  pull(idade)

local <- imdb_pessoas |> 
  filter(nome == diretor) |> 
  pull(local_nascimento)

conjuge <- imdb_pessoas |> 
  filter(nome == diretor) |> 
  pull(nome_conjuges) |> 
  str_extract("[A-Z][a-z]+ [A-Z][a-z]+")

filmes <- imdb |> 
  filter(str_detect(direcao, diretor))
  
lucro_medio <- imdb_lucro |> 
  filter(str_detect(direcao, diretor)) |> 
  summarise(lucro_medio = mean(lucro, na.rm = T)) |>
  pull(lucro_medio) |> 
  scales::number(big.mark = ".")
 
```

* Filme: Jogos Vorazes (*Hunger Games*, em inglês) 
* Dirigido por `r diretor`
  * Idade: `r idade` anos 
  * Onde nasceu: `r local`
  * Cônjuge: `r conjuge` (divorciado em 2016) 
  * Quantos filmes dirigiu: `r nrow(filmes)`
  * Lucro médio dos filmes dirigidos: US$ `r lucro_medio`
  
Abaixo estão os filmes dirigidos por `r diretor`.

```{r}
#| echo: false

filmes |>
  select(titulo, ano, genero, orcamento, receita, nota_imdb) |> 
  rename("Filme" = titulo,
         "Ano de lançamento" = ano, 
         "Gênero" = genero, 
         "Orçamento" =  orcamento, 
         "Receita" =  receita, 
         "Nota (IMDB)" =  nota_imdb) |> 
  knitr::kable()


```



b)  Qual a posição desse filme no ranking de notas do IMDB? E no ranking de lucro (considerando apenas valores em dólar)?


```{r}

calcula_posicao <- function(base, coluna) {
  base |> 
  select(titulo, {{ coluna }}) |> 
  arrange(desc({{ coluna }})) |> 
  mutate(posicao = 1:nrow(base)) |> 
  filter(titulo == "Hunger Games")
}


pos_nota <- calcula_posicao(imdb, nota_imdb)

pos_lucro <- calcula_posicao(imdb_lucro, lucro) |> 
  mutate(lucro = scales::number(lucro, big.mark = ".", scale = 1e-6, suffix = " M"))


```

Considerando a nota do filme na base IMDB, Jogos Vorazes aparece na posição `r pull(pos_nota, posicao)`, com a nota `r pull(pos_nota, nota_imdb)`. 

Já em termos de lucro, o filme está na posição `r pull(pos_lucro, posicao)` com um lucro de US$ `r pull(pos_lucro, lucro)`

c)  Em que dia esse filme foi lançado? E dia da semana? Algum outro filme foi lançado no mesmo dia? Quantos anos você tinha nesse dia?


```{r}
data <- imdb_2 |> 
  select(titulo, data_lancamento) |> 
  filter(titulo == "Hunger Games") |> 
  pull(data_lancamento) 

dia_sem <- wday(data, label = TRUE, locale = "pt_BR", abbr = FALSE)

outros_filmes <- imdb_2 |> 
  filter(data_lancamento == data & titulo != "Hunger Games") |> 
  select(titulo, direcao) |> 
  rename("Filme" = titulo,
         "Direção" = direcao)

minha_idade <- data - dmy("08/05/1998") 
minha_idade <- as.period(minha_idade) / years(1) 


```

Jogos Vorazes foi lançado em `r strftime(data, format = "%d/%m/%Y")` (`r dia_sem`). Nessa data, eu tinha `r round(minha_idade)` anos.

Outros `r nrow(outros_filmes)` filmes foram lançados nesse mesmo dia, listados na tabela abaixo.

```{r}
#| echo: false

outros_filmes |> knitr::kable()

```


d)  Faça um gráfico representando a distribuição da nota atribuída a esse filme por idade (base \`imdb_avaliacoes\`).

A seguir é apresentado o gráfico com a média das nota atribuídas por cada categorias etária ao filme Jogos Vorazes.

```{r}
id <- imdb |> filter(titulo == "Hunger Games") |> pull(id_filme)

imdb_avaliacoes |> 
  filter(id_filme == id) |> 
  select(contains("nota_media_idade")) |> 
  pivot_longer(everything(), names_to = "idade", values_to = "nota") |> 
  mutate(idade = str_remove(idade, "nota_media_idade_") |> str_replace("_", "-")) |> 
  ggplot() +
  geom_col(aes(x = idade, y = nota), fill = "#8B2635",
           width = 0.7) +
  scale_y_continuous(expand = expansion(mult = c(0, 0.05)),
                     n.breaks = 8
                     ) +
  labs(x = "Idade",
       y = "Nota média") +
  theme_classic()


```

